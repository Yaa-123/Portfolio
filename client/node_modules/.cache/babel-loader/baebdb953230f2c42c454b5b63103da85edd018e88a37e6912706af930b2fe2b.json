{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Portfolio Website\\\\client\\\\src\\\\hooks\\\\useAdminAuth.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect, useContext, createContext } from 'react';\nimport api from '../services/api';\n\n// Create auth context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Custom hook to use auth context\nexport const useAdminAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAdminAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// Auth provider component\n_s(useAdminAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [admin, setAdmin] = useState(null);\n  const [tokens, setTokens] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Initialize auth state from localStorage\n  useEffect(() => {\n    const initAuth = () => {\n      try {\n        const storedTokens = localStorage.getItem('adminTokens');\n        const storedAdmin = localStorage.getItem('adminData');\n        if (storedTokens && storedAdmin) {\n          setTokens(JSON.parse(storedTokens));\n          setAdmin(JSON.parse(storedAdmin));\n        }\n      } catch (error) {\n        console.error('Error initializing auth:', error);\n        logout();\n      } finally {\n        setLoading(false);\n      }\n    };\n    initAuth();\n  }, []);\n\n  // Login function\n  const login = async (username, password, twoFactorToken = null) => {\n    try {\n      const response = await api.post('/admin/login', {\n        username,\n        password,\n        twoFactorToken\n      });\n      if (response.data.requires2FA && !twoFactorToken) {\n        return {\n          requires2FA: true\n        };\n      }\n      const {\n        tokens: authTokens,\n        twoFactorEnabled\n      } = response.data;\n\n      // Store tokens and admin data\n      setTokens(authTokens);\n      setAdmin({\n        username,\n        twoFactorEnabled\n      });\n\n      // Save to localStorage\n      localStorage.setItem('adminTokens', JSON.stringify(authTokens));\n      localStorage.setItem('adminData', JSON.stringify({\n        username,\n        twoFactorEnabled\n      }));\n      return {\n        success: true,\n        twoFactorEnabled\n      };\n    } catch (error) {\n      console.error('Login error:', error);\n      if (error.response) {\n        return {\n          success: false,\n          message: error.response.data.message || 'Login failed'\n        };\n      }\n      return {\n        success: false,\n        message: 'Network error'\n      };\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    setAdmin(null);\n    setTokens(null);\n    localStorage.removeItem('adminTokens');\n    localStorage.removeItem('adminData');\n  };\n\n  // Check if user is authenticated\n  const isAuthenticated = () => {\n    return !!admin && !!tokens;\n  };\n\n  // Check if 2FA is enabled\n  const is2FAEnabled = () => {\n    return (admin === null || admin === void 0 ? void 0 : admin.twoFactorEnabled) || false;\n  };\n\n  // Value to be provided by context\n  const value = {\n    admin,\n    tokens,\n    login,\n    logout,\n    isAuthenticated,\n    is2FAEnabled,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"4SZgbI7cnxDZAJuhJVsTDWL5+3g=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["useState","useEffect","useContext","createContext","api","jsxDEV","_jsxDEV","AuthContext","useAdminAuth","_s","context","Error","AuthProvider","children","_s2","admin","setAdmin","tokens","setTokens","loading","setLoading","initAuth","storedTokens","localStorage","getItem","storedAdmin","JSON","parse","error","console","logout","login","username","password","twoFactorToken","response","post","data","requires2FA","authTokens","twoFactorEnabled","setItem","stringify","success","message","removeItem","isAuthenticated","is2FAEnabled","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/Portfolio Website/client/src/hooks/useAdminAuth.js"],"sourcesContent":["import { useState, useEffect, useContext, createContext } from 'react';\r\nimport api from '../services/api';\r\n\r\n// Create auth context\r\nconst AuthContext = createContext();\r\n\r\n// Custom hook to use auth context\r\nexport const useAdminAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAdminAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n// Auth provider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [admin, setAdmin] = useState(null);\r\n  const [tokens, setTokens] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Initialize auth state from localStorage\r\n  useEffect(() => {\r\n    const initAuth = () => {\r\n      try {\r\n        const storedTokens = localStorage.getItem('adminTokens');\r\n        const storedAdmin = localStorage.getItem('adminData');\r\n        \r\n        if (storedTokens && storedAdmin) {\r\n          setTokens(JSON.parse(storedTokens));\r\n          setAdmin(JSON.parse(storedAdmin));\r\n        }\r\n      } catch (error) {\r\n        console.error('Error initializing auth:', error);\r\n        logout();\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    initAuth();\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = async (username, password, twoFactorToken = null) => {\r\n    try {\r\n      const response = await api.post('/admin/login', {\r\n        username,\r\n        password,\r\n        twoFactorToken\r\n      });\r\n\r\n      if (response.data.requires2FA && !twoFactorToken) {\r\n        return { requires2FA: true };\r\n      }\r\n\r\n      const { tokens: authTokens, twoFactorEnabled } = response.data;\r\n      \r\n      // Store tokens and admin data\r\n      setTokens(authTokens);\r\n      setAdmin({ username, twoFactorEnabled });\r\n      \r\n      // Save to localStorage\r\n      localStorage.setItem('adminTokens', JSON.stringify(authTokens));\r\n      localStorage.setItem('adminData', JSON.stringify({ username, twoFactorEnabled }));\r\n      \r\n      return { success: true, twoFactorEnabled };\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      \r\n      if (error.response) {\r\n        return { \r\n          success: false, \r\n          message: error.response.data.message || 'Login failed' \r\n        };\r\n      }\r\n      \r\n      return { success: false, message: 'Network error' };\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    setAdmin(null);\r\n    setTokens(null);\r\n    localStorage.removeItem('adminTokens');\r\n    localStorage.removeItem('adminData');\r\n  };\r\n\r\n  // Check if user is authenticated\r\n  const isAuthenticated = () => {\r\n    return !!admin && !!tokens;\r\n  };\r\n\r\n  // Check if 2FA is enabled\r\n  const is2FAEnabled = () => {\r\n    return admin?.twoFactorEnabled || false;\r\n  };\r\n\r\n  // Value to be provided by context\r\n  const value = {\r\n    admin,\r\n    tokens,\r\n    login,\r\n    logout,\r\n    isAuthenticated,\r\n    is2FAEnabled,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}