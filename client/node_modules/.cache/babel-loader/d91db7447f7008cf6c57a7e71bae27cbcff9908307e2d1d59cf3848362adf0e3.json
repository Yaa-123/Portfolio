{"ast":null,"code":"import{useState,useEffect,useContext,createContext}from'react';import api from'../services/api';// Create auth context\nimport{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();// Custom hook to use auth context\nexport const useAdminAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAdminAuth must be used within an AuthProvider');}return context;};// Auth provider component\nexport const AuthProvider=_ref=>{let{children}=_ref;const[admin,setAdmin]=useState(null);const[tokens,setTokens]=useState(null);const[loading,setLoading]=useState(true);// Initialize auth state from localStorage\nuseEffect(()=>{const initAuth=()=>{try{const storedTokens=localStorage.getItem('adminTokens');const storedAdmin=localStorage.getItem('adminData');if(storedTokens&&storedAdmin){setTokens(JSON.parse(storedTokens));setAdmin(JSON.parse(storedAdmin));}}catch(error){console.error('Error initializing auth:',error);logout();}finally{setLoading(false);}};initAuth();},[]);// Login function\nconst login=async function(username,password){let twoFactorToken=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;try{const response=await api.post('/admin/login',{username,password,twoFactorToken});if(response.data.requires2FA&&!twoFactorToken){return{requires2FA:true};}const{tokens:authTokens,twoFactorEnabled}=response.data;// Store tokens and admin data\nsetTokens(authTokens);setAdmin({username,twoFactorEnabled});// Save to localStorage\nlocalStorage.setItem('adminTokens',JSON.stringify(authTokens));localStorage.setItem('adminData',JSON.stringify({username,twoFactorEnabled}));return{success:true,twoFactorEnabled};}catch(error){console.error('Login error:',error);if(error.response){return{success:false,message:error.response.data.message||'Login failed'};}return{success:false,message:'Network error'};}};// Logout function\nconst logout=()=>{setAdmin(null);setTokens(null);localStorage.removeItem('adminTokens');localStorage.removeItem('adminData');};// Check if user is authenticated\nconst isAuthenticated=()=>{return!!admin&&!!tokens;};// Check if 2FA is enabled\nconst is2FAEnabled=()=>{return(admin===null||admin===void 0?void 0:admin.twoFactorEnabled)||false;};// Value to be provided by context\nconst value={admin,tokens,login,logout,isAuthenticated,is2FAEnabled,loading};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["useState","useEffect","useContext","createContext","api","jsx","_jsx","AuthContext","useAdminAuth","context","Error","AuthProvider","_ref","children","admin","setAdmin","tokens","setTokens","loading","setLoading","initAuth","storedTokens","localStorage","getItem","storedAdmin","JSON","parse","error","console","logout","login","username","password","twoFactorToken","arguments","length","undefined","response","post","data","requires2FA","authTokens","twoFactorEnabled","setItem","stringify","success","message","removeItem","isAuthenticated","is2FAEnabled","value","Provider"],"sources":["C:/Users/USER/Desktop/Portfolio Website/client/src/hooks/useAdminAuth.js"],"sourcesContent":["import { useState, useEffect, useContext, createContext } from 'react';\r\nimport api from '../services/api';\r\n\r\n// Create auth context\r\nconst AuthContext = createContext();\r\n\r\n// Custom hook to use auth context\r\nexport const useAdminAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAdminAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n// Auth provider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [admin, setAdmin] = useState(null);\r\n  const [tokens, setTokens] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Initialize auth state from localStorage\r\n  useEffect(() => {\r\n    const initAuth = () => {\r\n      try {\r\n        const storedTokens = localStorage.getItem('adminTokens');\r\n        const storedAdmin = localStorage.getItem('adminData');\r\n        \r\n        if (storedTokens && storedAdmin) {\r\n          setTokens(JSON.parse(storedTokens));\r\n          setAdmin(JSON.parse(storedAdmin));\r\n        }\r\n      } catch (error) {\r\n        console.error('Error initializing auth:', error);\r\n        logout();\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    initAuth();\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = async (username, password, twoFactorToken = null) => {\r\n    try {\r\n      const response = await api.post('/admin/login', {\r\n        username,\r\n        password,\r\n        twoFactorToken\r\n      });\r\n\r\n      if (response.data.requires2FA && !twoFactorToken) {\r\n        return { requires2FA: true };\r\n      }\r\n\r\n      const { tokens: authTokens, twoFactorEnabled } = response.data;\r\n      \r\n      // Store tokens and admin data\r\n      setTokens(authTokens);\r\n      setAdmin({ username, twoFactorEnabled });\r\n      \r\n      // Save to localStorage\r\n      localStorage.setItem('adminTokens', JSON.stringify(authTokens));\r\n      localStorage.setItem('adminData', JSON.stringify({ username, twoFactorEnabled }));\r\n      \r\n      return { success: true, twoFactorEnabled };\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      \r\n      if (error.response) {\r\n        return { \r\n          success: false, \r\n          message: error.response.data.message || 'Login failed' \r\n        };\r\n      }\r\n      \r\n      return { success: false, message: 'Network error' };\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    setAdmin(null);\r\n    setTokens(null);\r\n    localStorage.removeItem('adminTokens');\r\n    localStorage.removeItem('adminData');\r\n  };\r\n\r\n  // Check if user is authenticated\r\n  const isAuthenticated = () => {\r\n    return !!admin && !!tokens;\r\n  };\r\n\r\n  // Check if 2FA is enabled\r\n  const is2FAEnabled = () => {\r\n    return admin?.twoFactorEnabled || false;\r\n  };\r\n\r\n  // Value to be provided by context\r\n  const value = {\r\n    admin,\r\n    tokens,\r\n    login,\r\n    logout,\r\n    isAuthenticated,\r\n    is2FAEnabled,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}